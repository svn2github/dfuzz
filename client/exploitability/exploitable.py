import glob
import sys
import os
cwd = os.path.split(os.path.realpath(__file__))[0]
sys.path.append(os.path.join(cwd, "../controller/"))
import action

class Exploitable():
    def __init__(self, target_prog=None):
        """
        Declare crash analysis tool. Linux tool that will be used will be Valgrind
        @param target_prog: Program that was being fuzzed that crashed and could be potentially exploited :)
        """
        self.action = action.Action()
        self.crash_cmd = "valgrind --xml=yes --xml-file="
        if target_prog: 
            self.target_prog = target_prog
        self.counter = 0
        
    def analyze(self, directory, filetype="pdf", target_prog=None):
        """
        @param directory: direcotry where files that cause crashes are located
        @param filetype: Type of file (pdf, mp3, tiff, etc..)
        @param target_prog: Program that was being fuzzed that crashed and could be potentially exploited :)
        """
        if target_prog:
            self.target_prog = target_prog
        if not self.target_prog: 
            return "Error, Did not specify target program"
        
        _filetype = "*." + filetype
        search = os.path.join(directory, _filetype)
        files = glob.glob(search)
        for file in files:
            _crash_cmd = self.crash_cmd + str(file) + ".xml" + " " + str(self.target_prog) + " " + file      
            self.action.run_timed(_crash_cmd, 10)
            
if __name__ == "__main__":
    e = Exploitable("pdftotext")
    e.analyze("/home/RIP0verwrite/workspace/dfuzz/trunk/client/results/dfuzz_run1")